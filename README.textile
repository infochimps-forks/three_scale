
h1. 3Scale User

This is a Ruby wrapper for the 3scale "User Management API":http://www.3scale.net/support/api-user-management/

h3. Configure

The 3scale V1.0 API requires a @provider_key@ for authorization, it must be passed in before using the wrapper.

<pre><code>
ThreeScale.configure do |config|
  config.provider_key = "falkfj2lkjlkasjflkj"
end
</code></pre>

<pre><code>
new_user = ThreeScale::User.new("foobar", :plan => "Silverback")
</code></pre>
The only required parameter is the @username@.  Optionally pass @plan@, @first_name@ and @last_name@ attributes.

 #The @signup!@ method pushes the user object up to 3scale for creation. A @ThreeScale::Request::Response@ object is returned.
<pre><code>
 response = new_user.signup!
 if response.success?
   #signed up user successfully!
 else
   #An array of errors is returned, that can be iterated over.
   response.errors.each do |error|
     puts error.message
   end
 end
</code></pre>

The @find@ method can be used to find an existing account:
<pre><code>
 existing_user = ThreeScale::User.find("foobar")
 existing_user.plan = "baboon"
 existing_user.first_name = "billy"
 existing_user.update! 
</code></pre>
This will update the user's account in 3scale to reflect the local object.

Additional methods include:

@cancel!@ - cancel the account
@regenerate_apikey!@ - regenerate the user's apikey
